name: 'Build and Test Microservice'
run-name: üßë‚Äçüíª ${{ github.actor }} UserSrv Build and Test.
on:
  push:
    branches:
      - main
      - dev/default
#    paths:
#      - 'services/users_srv/**'
#    tags:
#      - 'v*'
  workflow_dispatch:

env:
  BUILD_SRV: 'users_srv'
  BUILD_PATH: './services'
  BUILD_NAME: 'srv'
  ENVIRONMENT: ${{ (github.ref == 'refs/heads/main' && 'prod') || (github.ref == 'refs/heads/dev/default' && 'dev') }}

jobs:
  test-jobs:
    runs-on: ubuntu-latest
    steps:
      - name: 0. üåç Set time zone
        uses: szenius/set-timezone@v1.1
        with:
          timezoneLinux: "Asia/Shanghai"
      - name: 1. üì¶ Checkout Code
        uses: actions/checkout@v3
      - name: 2. üöÄ Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
      - name: 3. üßπ Code Linting
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.53
      - name: 4. üß™ Test Code & üèóÔ∏è Build
        run: |
          go mod tidy
          GOOS=linux GOARCH=amd64 go build -o ${{ env.BUILD_NAME }}-amd64 ${{ env.BUILD_PATH }}/${{ env.BUILD_SRV }}/main.go
          GOOS=linux GOARCH=arm64 go build -o ${{ env.BUILD_NAME }}-arm64 ${{ env.BUILD_PATH }}/${{ env.BUILD_SRV }}/main.go
          go test -v ${{ env.BUILD_PATH }}/${{ env.BUILD_SRV }}
          cp ${{ env.BUILD_PATH }}/${{ env.BUILD_SRV }}/conf/${{ env.ENVIRONMENT }}.yml ./config.yml

      - uses: docker/setup-buildx-action@v2
        name: Customize Docker driver
        with:
          driver-opts: image=moby/buildkit:v0.11.0
      - uses: mr-smithers-excellent/docker-build-push@v6
        name: Build & push Docker image amd64
        with:
          image: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.BUILD_SRV }}
          registry: docker.io
          addLatest: true
          multiPlatform: true
          dockerfile: './Dockerfile.amd64'
          overrideDriver: true
          platform: linux/amd64
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: mr-smithers-excellent/docker-build-push@v6
        name: Build & push Docker image arm64
        with:
          image: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.BUILD_SRV }}
          registry: docker.io
          addLatest: true
          multiPlatform: true
          dockerfile: './Dockerfile.arm64'
          overrideDriver: true
          platform: linux/arm64
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
#      - name: 5. üßë‚Äçüîß Login to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Build and push
#        id: docker_build
#        uses: docker/build-push-action@v4
#        with:
#          context: .
#          push: true
#          tags: ${{ steps.meta.outputs.tags }}
#          labels: ${{ steps.meta.outputs.labels }}
#          cache-from: type=gha
#          cache-to: type=gha,mode=max
#          platforms: linux/amd64,linux/arm64/v8
#      - name: 6. üì¶ Build and push Docker image <amd64>
#        uses: docker/build-push-action@v4
#        with:
#          context: '.'
#          dockerfile: './Dockerfile.amd64'
#          push: true
#          tags: |
#            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.BUILD_SRV }}:latest
#          platforms: 'linux/${{ matrix.arch }}'