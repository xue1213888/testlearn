name: 'Build and Test Microservice'
run-name: 🧑‍💻 ${{ github.actor }} UserSrv Build and Test.
on:
  push:
    branches:
      - main
      - dev/default
#    paths:
#      - 'services/users_srv/**'
#    tags:
#      - 'v*'
  workflow_dispatch:

env:
  BUILD_SRV: 'users_srv'
  BUILD_PATH: './services'
  BUILD_NAME: 'srv'
  ENVIRONMENT: ${{ (github.ref == 'refs/heads/main' && 'prod') || (github.ref == 'refs/heads/dev/default' && 'dev') }}

jobs:
  test-jobs:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
      - name: 0. 🌍 Set time zone
        uses: szenius/set-timezone@v1.1
        with:
          timezoneLinux: "Asia/Shanghai"
      - name: 1. 📦 Checkout Code
        uses: actions/checkout@v3
      - name: 2. 🚀 Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
      - name: 3. 🧹 Code Linting
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.53
      - name: 4. 🧪 Test Code & 🏗️ Build
        run: |
          go mod tidy
          GOOS=linux GOARCH=${{ matrix.arch }} go build -o ${{ env.BUILD_NAME }} ${{ env.BUILD_PATH }}/${{ env.BUILD_SRV }}/main.go
          go test -v ${{ env.BUILD_PATH }}/${{ env.BUILD_SRV }}
          cp ${{ env.BUILD_PATH }}/${{ env.BUILD_SRV }}/conf/${{ env.ENVIRONMENT }}.yml ./config.yml
      - name: 5. 🧑‍🔧 Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.BUILD_SRV }}
          # generate Docker tags based on the following events/attributes
          #   nightly, master, pr-2, 1.2.3, 1.2, 1
          tags: |
            type=schedule,pattern=nightly
            type=edge
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64/v8
#      - name: 6. 📦 Build and push Docker image <amd64>
#        uses: docker/build-push-action@v4
#        with:
#          context: '.'
#          dockerfile: './Dockerfile'
#          push: true
#          tags: |
#            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.BUILD_SRV }}:latest
#          platforms: 'linux/${{ matrix.arch }}'