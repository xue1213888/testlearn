name: 'Build and Test Microservice'
run-name: üßë‚Äçüíª ${{ github.actor }} UserSrv Build and Test.
on:
  push:
    branches:
      - main
      - dev/default
  #    paths:
  #      - 'services/users_srv/**'
    tags:
      - 'v*'
  workflow_dispatch:

env:
  BUILD_SRV: 'users_srv'
  BUILD_PATH: './services'
  BUILD_NAME: 'srv'
  ENVIRONMENT: ${{ (github.ref == 'refs/heads/main' && 'prod') || (github.ref == 'refs/heads/dev/default' && 'dev') || 'prod' }}
  TAGS:

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: echo git
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo '$GITHUB_CONTEXT'
      - name: 0. üåç Set Time Zone
        uses: szenius/set-timezone@v1.1
        with:
          timezoneLinux: "Asia/Shanghai"
      - name: 1. üì¶ Checkout Repository
        uses: actions/checkout@v3
      - name: 2. üöÄ Setup Go Environment
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
      - name: 3. üßπ Lint Code
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.53
      - name: 4. üß™ Test & üèóÔ∏è Build Services
        run: |
          go mod tidy
          GOOS=linux GOARCH=amd64 go build -o ${{ env.BUILD_NAME }}-amd64 ${{ env.BUILD_PATH }}/${{ env.BUILD_SRV }}/main.go
          GOOS=linux GOARCH=arm64 go build -o ${{ env.BUILD_NAME }}-arm64 ${{ env.BUILD_PATH }}/${{ env.BUILD_SRV }}/main.go
          go test -v ${{ env.BUILD_PATH }}/${{ env.BUILD_SRV }}
          cp ${{ env.BUILD_PATH }}/${{ env.BUILD_SRV }}/conf/${{ env.ENVIRONMENT }}.yml ./config.yml

      - name: 5. üê≥ Customize Docker driver
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: image=moby/buildkit:v0.11.0
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/hero300
          tags: |
            type=ref,event=branch
            type=ref,event=tag
      - name: temp very
        run: |
          echo ${{ steps.meta.outputs.tags }}
      - name: 6. üö¢ Build & Push Docker Image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.BUILD_SRV }}
          registry: docker.io
          addLatest: ${{ env.ENVIRONMENT == 'prod' }}
          multiPlatform: true
          dockerfile: './Dockerfile'
          overrideDriver: true
          tags: ${{ steps.meta.outputs.tags }}
          platform: linux/amd64,linux/arm64
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}