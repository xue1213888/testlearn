name: 'Build and Test Microservice'
run-name: 🧑‍💻 ${{ github.actor }} UserSrv Build and Test.
on:
  push:
    branches:
      - main
      - dev
  #    paths:
  #      - 'services/users_srv/**'
    tags:
      - 'v*'
  workflow_dispatch:

env:
  BUILD_SRV: 'users_srv'
  BUILD_PATH: './services'
  BUILD_NAME: 'srv'
  BUILD_PROD: ${{ (github.ref_type == 'tag') && (github.event.base_ref == 'refs/heads/main') }}
  BUILD_DEV: ${{ (github.ref == 'refs/heads/main') || (github.ref == 'refs/heads/dev') }}
  BUILD_TAG: ${{ github.ref_name }}

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: echo git
        if: ${{ env.BUILD_DEV || env.BUILD_PROD }}
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo '$GITHUB_CONTEXT'
      - name: 0. 🌍 Set Time Zone
        uses: szenius/set-timezone@v1.1
        with:
          timezoneLinux: "Asia/Shanghai"
      - name: 1. 📦 Checkout Repository
        uses: actions/checkout@v3
      - name: 2. 🚀 Setup Go Environment
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
      - name: 3. 🧹 Lint Code
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.53
      - name: 4. 🧪 Test & 🏗️ Build Services
        run: |
          go mod tidy
          GOOS=linux GOARCH=amd64 go build -o ${{ env.BUILD_NAME }}-amd64 ${{ env.BUILD_PATH }}/${{ env.BUILD_SRV }}/main.go
          GOOS=linux GOARCH=arm64 go build -o ${{ env.BUILD_NAME }}-arm64 ${{ env.BUILD_PATH }}/${{ env.BUILD_SRV }}/main.go
          go test -v ${{ env.BUILD_PATH }}/${{ env.BUILD_SRV }}
          cp ${{ env.BUILD_PATH }}/${{ env.BUILD_SRV }}/conf/${{ env.BUILD_PROD && 'prod' || 'dev' }}.yml ./config.yml

      - name: 5. 🐳 Customize Docker driver
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: image=moby/buildkit:v0.11.0

      - name: 6. 🚢 Set Docker Image Tags
        id: set_tags
        env:
          IMAGE_PREFIX: ${{ secrets.DOCKERHUB_USERNAME }}/hero300:${{ env.BUILD_SRV }}-
          BUILD_ENV: ${{ ( env.BUILD_PROD && 'prod' ) || ( env.BUILD_DEV && 'dev' ) || '' }}
        run: |
          TAGS=""
          if [[ "${{ env.BUILD_ENV }}" == "prod" ]]; then
            TAGS="${env.IMAGE_PREFIX}latest,${env.IMAGE_PREFIX}prod"
          elif [[ "${{ env.BUILD_ENV }}" == "dev" ]]; then
            TAGS="${env.IMAGE_PREFIX}dev"
          fi
          echo "TAGS=${TAGS}" >> $GITHUB_ENV

      - name: 7. 🚢 Build & Push Docker Image
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.BUILD_SRV }}
          registry: docker.io
          multiPlatform: true
          dockerfile: './Dockerfile'
          overrideDriver: true
          tags: ${{ env.TAGS }}
          platform: linux/amd64,linux/arm64
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

#      - name: 6. 🚢 Build & Push Docker Image
#        uses: mr-smithers-excellent/docker-build-push@v6
#        env:
#          ENVIRONMENT: ${{ ( env.BUILD_PROD && 'prod' ) || ( env.BUILD_DEV && 'dev' ) || false }}
#          DOCKER_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/hero300:${{ env.BUILD_SRV }}-
#          TAGS: ${{ env.BUILD_PROD && [ '${ env.DOCKER_IMAGE }latest', '${ env.DOCKER_IMAGE }${ env.BUILD_TAG }' ] || ['${ env.DOCKER_IMAGE }dev'] }}
#        with:
#          image: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.BUILD_SRV }}
#          registry: docker.io
#          multiPlatform: true
#          dockerfile: './Dockerfile'
#          overrideDriver: true
#          tags: ${{ env.TAGS }}
#          platform: linux/amd64,linux/arm64
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}